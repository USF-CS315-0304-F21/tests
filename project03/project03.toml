[[tests]]
name = "get_bit_1"
input = ["./get_bit", "64", "0"]
expected = """
C: 0
Asm: 0
"""
rubric = 10

[[tests]]
name = "get_bit_2"
input = ["./get_bit", "64", "6"]
expected = """
C: 1
Asm: 1
"""
rubric = 10

[[tests]]
name = "count_ones_1"
input = ["./count_ones", "7"]
expected = """
C: 3
Asm: 3
"""
rubric = 10

[[tests]]
name = "count_ones_2"
input = ["./count_ones", "4294967295"]
expected = """
C: 32
Asm: 32
"""
rubric = 10

[[tests]]
name = "merge_1"
input = ["./merge", "2", "1", "1"]
expected = """
merge_c([1,1], 0, 2, aux[]) = [1,1]
merge_s([1,1], 0, 2, aux[]) = [1,1]
"""
rubric = 10

[[tests]]
name = "merge_2"
input = ["./merge", "6", "1", "3", "5", "2", "4", "6"]
expected = """
merge_c([1,3,5,2,4,6], 0, 6, aux[]) = [1,2,3,4,5,6]
merge_s([1,3,5,2,4,6], 0, 6, aux[]) = [1,2,3,4,5,6]
"""
rubric = 10

[[tests]]
name = "merge_sort_1"
input = ["./merge_sort", "6", "6", "4", "1", "2", "5", "3"]
expected = """
merge_sort_c([6,4,1,2,5,3], 0, 6, aux[]) = [1,2,3,4,5,6]
merge_sort_s([6,4,1,2,5,3], 0, 6, aux[]) = [1,2,3,4,5,6]
"""
rubric = 10

